openapi: 3.0.3
info:
  title: Travel Expense Management API
  version: 1.0.0

servers:
  - url: http://localhost:8080

tags:
  - name: Travel
    description: Endpoints related to travel expense reports
  - name: User
    description: Endpoints related to user management
  - name: Approval
    description: Endpoints related to travel report approval

paths:
  /api/v1/travels:
    post:
      tags:
        - Travel
      summary: Create a new travel expense report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelReportRequestDto'
      responses:
        '201':
          description: Travel expense report created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelReportSubmissionResponseDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Travel
      summary: Get all travel expense reports for the current user
      responses:
        '200':
          description: List of travel expense reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TravelReportResponseDto'
        '404':
          description: Travel reports not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/travels/{techId}:
    get:
      tags:
        - Travel
      summary: Get a travel expense report by ID
      parameters:
        - in: path
          name: techId
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the travel report
      responses:
        '200':
          description: Travel expense report details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelReportSubmissionResponseDto'
        '404':
          description: Travel report not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/travels/update/{techId}:
    patch:
      tags:
        - Travel
      summary: Update a travel expense report by ID
      parameters:
        - in: path
          name: techId
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the travel report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelReportEditDto'
      responses:
        '200':
          description: Travel expense report updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Travel report not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/travels/print/{techId}:
    post:
      tags:
        - Travel
      summary: Generate a PDF of the travel expense report
      parameters:
        - in: path
          name: techId
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the travel report
      responses:
        '200':
          description: PDF generated successfully
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '404':
          description: Travel report not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/new-user:
    post:
      tags:
        - User
      summary: Add a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDto'
      responses:
        '201':
          description: User added successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/all-users:
    get:
      tags:
        - User
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseDto'
        '404':
          description: Users not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/{email}/change-role-to-accountant:
    patch:
      tags:
        - User
      summary: Change user role to Accountant
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          description: Email of the user
      responses:
        '204':
          description: User role changed to Accountant
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/{email}/change-role-to-manager:
    patch:
      tags:
        - User
      summary: Change user role to Manager
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          description: Email of the user
      responses:
        '204':
          description: User role changed to Manager
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/approvals/pending:
    get:
      tags:
        - Approval
      summary: Get all pending travel expense reports for approval
      responses:
        '200':
          description: List of pending travel expense reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TravelReportResponseDto'
        '404':
          description: No pending travel reports found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/approvals/{travelId}/approve:
    post:
      tags:
        - Approval
      summary: Approve a travel expense report
      parameters:
        - in: path
          name: travelId
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the travel report
      responses:
        '200':
          description: Travel expense report approved successfully
        '404':
          description: Travel report not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict in approval process
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/approvals/{travelId}/reject:
    post:
      tags:
        - Approval
      summary: Reject a travel expense report
      parameters:
        - in: path
          name: travelId
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the travel report
      responses:
        '200':
          description: Travel expense report rejected successfully
        '404':
          description: Travel report not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict in rejection process
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    UserRequestDto:
      type: object
      properties:
        email:
          type: string
          format: email
          example: john.doe@example.com
        name:
          type: string
          example: John
        surname:
          type: string
          example: Doe
        password:
          type: string
          format: password
          example: strongPassword123
      required:
        - email
        - name
        - surname
        - password

    UserResponseDto:
      type: object
      properties:
        email:
          type: string
          format: email
          example: john.doe@example.com
        name:
          type: string
          example: John
        surname:
          type: string
          example: Doe
        roles:
          type: string
          enum:
            - USER
            - ACCOUNTANT
            - MANAGER
          example: ACCOUNTANT
      required:
        - email
        - name
        - surname
        - roles

    TravelReportRequestDto:
      type: object
      properties:
        fromCity:
          type: string
          example: New York
        toCity:
          type: string
          example: Los Angeles
        startDate:
          type: string
          format: date
          example: "2024-05-01"
        startTime:
          type: string
          format: time
          example: "09:00:00"
        endDate:
          type: string
          format: date
          example: "2024-05-05"
        endTime:
          type: string
          format: time
          example: "18:00:00"
        advancePayment:
          type: number
          format: float
          example: 500.00
        otherExpenses:
          type: number
          format: float
          example: 150.00
        dietDto:
          $ref: '#/components/schemas/DietDto'
        overnightStayDto:
          $ref: '#/components/schemas/OvernightStayDto'
        transportCostDto:
          $ref: '#/components/schemas/TransportCostDto'
      required:
        - fromCity
        - toCity
        - startDate
        - startTime
        - endDate
        - endTime
        - advancePayment
        - otherExpenses
        - dietDto
        - overnightStayDto
        - transportCostDto

    TravelReportEditDto:
      type: object
      properties:
        fromCity:
          type: string
          example: New York
        toCity:
          type: string
          example: Los Angeles
        startDate:
          type: string
          format: date
          example: "2024-05-01"
        startTime:
          type: string
          format: time
          example: "09:00:00"
        endDate:
          type: string
          format: date
          example: "2024-05-05"
        endTime:
          type: string
          format: time
          example: "18:00:00"
        advancePayment:
          type: number
          format: float
          example: 500.00
        otherExpenses:
          type: number
          format: float
          example: 150.00
        dietEditDto:
          $ref: '#/components/schemas/DietEditDto'
        overnightStayEditDto:
          $ref: '#/components/schemas/OvernightStayEditDto'
        transportCostEditDto:
          $ref: '#/components/schemas/TransportCostEditDto'
      required:
        - fromCity
        - toCity
        - startDate
        - startTime
        - endDate
        - endTime
        - advancePayment
        - otherExpenses
        - dietEditDto
        - overnightStayEditDto
        - transportCostEditDto

    TravelReportSubmissionResponseDto:
      type: object
      properties:
        techId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        status:
          type: string
          enum:
            - SUBMITTED
            - APPROVED
            - REJECTED
          example: SUBMITTED
      required:
        - techId
        - status

    TravelReportResponseDto:
      type: object
      properties:
        techId:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        email:
          type: string
          format: email
          example: john.doe@example.com
        fromCity:
          type: string
          example: New York
        toCity:
          type: string
          example: Los Angeles
        startDate:
          type: string
          format: date
          example: "2024-05-01"
        startTime:
          type: string
          format: time
          example: "09:00:00"
        endDate:
          type: string
          format: date
          example: "2024-05-05"
        endTime:
          type: string
          format: time
          example: "18:00:00"
        otherExpenses:
          type: number
          format: float
          example: 150.00
        totalAmount:
          type: number
          format: float
          example: 650.00
        advancePayment:
          type: number
          format: float
          example: 500.00
        dietResponse:
          $ref: '#/components/schemas/DietResponseDto'
        overnightStayResponseDto:
          $ref: '#/components/schemas/OvernightStayResponseDto'
        transportCostResponseDto:
          $ref: '#/components/schemas/TransportCostResponseDto'
      required:
        - techId
        - email
        - fromCity
        - toCity
        - startDate
        - startTime
        - endDate
        - endTime
        - otherExpenses
        - totalAmount
        - advancePayment
        - dietResponse
        - overnightStayResponseDto
        - transportCostResponseDto

    TravelReportResponsePdfDto:
      type: object
      properties:
        name:
          type: string
          example: John
        surname:
          type: string
          example: Doe
        fromCity:
          type: string
          example: New York
        toCity:
          type: string
          example: Los Angeles
        startDate:
          type: string
          format: date
          example: "2024-05-01"
        startTime:
          type: string
          format: time
          example: "09:00:00"
        endDate:
          type: string
          format: date
          example: "2024-05-05"
        endTime:
          type: string
          format: time
          example: "18:00:00"
        numberOfBreakfasts:
          type: integer
          example: 3
        numberOfLunches:
          type: integer
          example: 3
        numberOfDinners:
          type: integer
          example: 2
        totalAmount:
          type: number
          format: float
          example: 650.00
        dietAmount:
          type: number
          format: float
          example: 200.00
        foodAmount:
          type: number
          format: float
          example: 100.00
        totalAmountOfOvernightsStayWithInvoice:
          type: number
          format: float
          example: 300.00
        totalAmountOfOvernightsStayWithoutInvoice:
          type: number
          format: float
          example: 50.00
        advancePayment:
          type: number
          format: float
          example: 500.00
        undocumentedLocalTransportCost:
          type: number
          format: float
          example: 100.00
        documentedLocalTransportCost:
          type: number
          format: float
          example: 150.00
        meansOfTransport:
          type: string
          example: Car
        totalCostOfTravelByOwnAndPublicTransport:
          type: number
          format: float
          example: 250.00
        transportCostAmount:
          type: number
          format: float
          example: 250.00
        otherExpenses:
          type: number
          format: float
          example: 150.00
      required:
        - name
        - surname
        - fromCity
        - toCity
        - startDate
        - startTime
        - endDate
        - endTime
        - numberOfBreakfasts
        - numberOfLunches
        - numberOfDinners
        - totalAmount
        - dietAmount
        - foodAmount
        - totalAmountOfOvernightsStayWithInvoice
        - totalAmountOfOvernightsStayWithoutInvoice
        - advancePayment
        - undocumentedLocalTransportCost
        - documentedLocalTransportCost
        - meansOfTransport
        - totalCostOfTravelByOwnAndPublicTransport
        - transportCostAmount
        - otherExpenses

    DietDto:
      type: object
      properties:
        dailyAllowance:
          type: number
          format: float
          example: 50.00
        numberOfBreakfasts:
          type: integer
          minimum: 0
          example: 3
        numberOfLunches:
          type: integer
          minimum: 0
          example: 3
        numberOfDinners:
          type: integer
          minimum: 0
          example: 2
      required:
        - dailyAllowance
        - numberOfBreakfasts
        - numberOfLunches
        - numberOfDinners

    DietEditDto:
      type: object
      properties:
        dailyAllowance:
          type: number
          format: float
          example: 60.00
        numberOfBreakfasts:
          type: integer
          minimum: 0
          example: 4
        numberOfLunches:
          type: integer
          minimum: 0
          example: 4
        numberOfDinners:
          type: integer
          minimum: 0
          example: 3
      required:
        - dailyAllowance
        - numberOfBreakfasts
        - numberOfLunches
        - numberOfDinners

    DietResponseDto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        numberOfBreakfasts:
          type: integer
          example: 3
        numberOfLunches:
          type: integer
          example: 3
        numberOfDinners:
          type: integer
          example: 2
        foodAmount:
          type: number
          format: float
          example: 100.00
        dietAmount:
          type: number
          format: float
          example: 200.00
      required:
        - id
        - numberOfBreakfasts
        - numberOfLunches
        - numberOfDinners
        - foodAmount
        - dietAmount

    OvernightStayDto:
      type: object
      properties:
        inputQuantityOfOvernightStayWithoutInvoice:
          type: integer
          minimum: 0
          example: 2
        inputQuantityOfOvernightStayWithInvoice:
          type: integer
          minimum: 0
          example: 1
        totalAmountOfOvernightsStayWithInvoice:
          type: number
          format: float
          example: 300.00
        isInvoiceAmountGreaterAllowed:
          type: boolean
          example: true
      required:
        - inputQuantityOfOvernightStayWithoutInvoice
        - inputQuantityOfOvernightStayWithInvoice
        - totalAmountOfOvernightsStayWithInvoice
        - isInvoiceAmountGreaterAllowed

    OvernightStayEditDto:
      type: object
      properties:
        inputQuantityOfOvernightStayWithoutInvoice:
          type: integer
          minimum: 0
          example: 3
        inputQuantityOfOvernightStayWithInvoice:
          type: integer
          minimum: 0
          example: 2
        totalAmountOfOvernightsStayWithInvoice:
          type: number
          format: float
          example: 350.00
        isInvoiceAmountGreaterAllowed:
          type: boolean
          example: false
      required:
        - inputQuantityOfOvernightStayWithoutInvoice
        - inputQuantityOfOvernightStayWithInvoice
        - totalAmountOfOvernightsStayWithInvoice
        - isInvoiceAmountGreaterAllowed

    OvernightStayResponseDto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        quantityOfOvernightStay:
          type: integer
          example: 3
        totalInputQuantityOfOvernightStay:
          type: integer
          example: 5
        inputQuantityOfOvernightStayWithoutInvoice:
          type: integer
          example: 2
        totalAmountOfOvernightsStayWithoutInvoice:
          type: number
          format: float
          example: 100.00
        inputQuantityOfOvernightStayWithInvoice:
          type: integer
          example: 1
        totalAmountOfOvernightsStayWithInvoice:
          type: number
          format: float
          example: 300.00
        overnightStayAmount:
          type: number
          format: float
          example: 400.00
      required:
        - id
        - quantityOfOvernightStay
        - totalInputQuantityOfOvernightStay
        - inputQuantityOfOvernightStayWithoutInvoice
        - totalAmountOfOvernightsStayWithoutInvoice
        - inputQuantityOfOvernightStayWithInvoice
        - totalAmountOfOvernightsStayWithInvoice
        - overnightStayAmount

    TransportCostDto:
      type: object
      properties:
        daysForUndocumentedLocalTransportCost:
          type: integer
          minimum: 0
          example: 2
        documentedLocalTransportCost:
          type: number
          format: float
          example: 150.00
        meansOfTransport:
          type: string
          example: Car
        costOfTravelByPublicTransport:
          type: number
          format: float
          example: 100.00
        kilometersByCarEngineUpTo900cc:
          type: integer
          minimum: 0
          example: 500
        kilometersByCarEngineAbove900cc:
          type: integer
          minimum: 0
          example: 300
        kilometersByMotorcycle:
          type: integer
          minimum: 0
          example: 100
        kilometersByMoped:
          type: integer
          minimum: 0
          example: 50
      required:
        - daysForUndocumentedLocalTransportCost
        - documentedLocalTransportCost
        - meansOfTransport
        - costOfTravelByPublicTransport
        - kilometersByCarEngineUpTo900cc
        - kilometersByCarEngineAbove900cc
        - kilometersByMotorcycle
        - kilometersByMoped

    TransportCostEditDto:
      type: object
      properties:
        daysForUndocumentedLocalTransportCost:
          type: integer
          minimum: 0
          example: 3
        documentedLocalTransportCost:
          type: number
          format: float
          example: 180.00
        meansOfTransport:
          type: string
          example: Train
        costOfTravelByPublicTransport:
          type: number
          format: float
          example: 120.00
        kilometersByCarEngineUpTo900cc:
          type: integer
          minimum: 0
          example: 600
        kilometersByCarEngineAbove900cc:
          type: integer
          minimum: 0
          example: 400
        kilometersByMotorcycle:
          type: integer
          minimum: 0
          example: 150
        kilometersByMoped:
          type: integer
          minimum: 0
          example: 80
      required:
        - daysForUndocumentedLocalTransportCost
        - documentedLocalTransportCost
        - meansOfTransport
        - costOfTravelByPublicTransport
        - kilometersByCarEngineUpTo900cc
        - kilometersByCarEngineAbove900cc
        - kilometersByMotorcycle
        - kilometersByMoped

    TransportCostResponseDto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        daysForTransportCost:
          type: integer
          example: 3
        undocumentedLocalTransportCost:
          type: number
          format: float
          example: 100.00
        documentedLocalTransportCost:
          type: number
          format: float
          example: 180.00
        meansOfTransport:
          type: string
          example: Train
        costOfTravelByPublicTransport:
          type: number
          format: float
          example: 120.00
        costOfTravelByOwnTransport:
          type: number
          format: float
          example: 250.00
        transportCostAmount:
          type: number
          format: float
          example: 370.00
      required:
        - id
        - daysForTransportCost
        - undocumentedLocalTransportCost
        - documentedLocalTransportCost
        - meansOfTransport
        - costOfTravelByPublicTransport
        - costOfTravelByOwnTransport
        - transportCostAmount

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Error message detailing what went wrong."
      required:
        - message

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
