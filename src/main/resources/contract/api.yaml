openapi: 3.0.3
info:
  title: Travel Expense API
  version: 1.0.0

servers:
  - url: http://localhost:8080

paths:
  /api/v1/travels:
    post:
      summary: Calculate travel expenses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelRequestDto'
      responses:
        '201':
          description: Travel expenses calculated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelResponseDto'

  /api/v1/travels/print/{id}:
    post:
      summary: Generate PDF document
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: PDF document generated successfully
          content:
            text/plain:
              schema:
                type: string
                example: "PDF document generated successfully."
        '404':
          description: Travel not found
          content:
            text/plain:
              schema:
                type: string
                example: "Error generating PDF document: Travel not found."
        '500':
          description: Error generating PDF document
          content:
            text/plain:
              schema:
                type: string
                example: "Error generating PDF document: [error message]"

  /api/v1/users:
    post:
      summary: Add a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDto'
      responses:
        '201':
          description: User created

components:
  schemas:
    UserRequestDto:
      type: object
      properties:
        pesel:
          type: integer
          minimum: 0
          example: 12345678901
        firstName:
          type: string
          minLength: 2
          maxLength: 50
          example: John
        secondName:
          type: string
          minLength: 2
          maxLength: 50
          example: Doe
        position:
          type: string
          minLength: 2
          maxLength: 50
          example: Developer
      required:
        - pesel
        - firstName
        - secondName
        - position

    TravelRequestDto:
      type: object
      properties:
        pesel:
          type: integer
          minimum: 11
          example: 12345678901
        fromCity:
          type: string
          minLength: 2
          maxLength: 50
          example: Warsaw
        toCity:
          type: string
          minLength: 2
          maxLength: 50
          example: Krakow
        startDate:
          type: string
          format: date
          example: 2023-01-01
        startTime:
          type: string
          format: time
          example: 08:00:00
        endDate:
          type: string
          format: date
          example: 2023-01-02
        endTime:
          type: string
          format: time
          example: 18:00:00
        advancePayment:
          type: number
          format: double
          example: 100.00
        dietDto:
          $ref: '#/components/schemas/DietDto'
        overnightStayDto:
          $ref: '#/components/schemas/OvernightStayDto'
      required:
        - pesel
        - fromCity
        - toCity
        - startDate
        - startTime
        - endDate
        - endTime
        - advancePayment
        - dietDto
        - overnightStayDto

    DietDto:
      type: object
      properties:
        dailyAllowance:
          type: number
          format: double
          example: 45.00
        numberOfBreakfasts:
          type: integer
          minimum: 0
          example: 1
        numberOfLunches:
          type: integer
          minimum: 0
          example: 1
        numberOfDinners:
          type: integer
          minimum: 0
          example: 1
      required:
        - dailyAllowance
        - numberOfBreakfasts
        - numberOfLunches
        - numberOfDinners

    OvernightStayDto:
      type: object
      properties:
        inputQuantityOfOvernightStayWithoutInvoice:
          type: integer
          minimum: 0
          example: 1
        amountOfTotalOvernightsStayWithoutInvoice:
          type: number
          format: double
          example: 50.00
        inputQuantityOfOvernightStayWithInvoice:
          type: integer
          minimum: 0
          example: 1
        amountOfTotalOvernightsStayWithInvoice:
          type: number
          format: double
          example: 100.00
      required:
        - inputQuantityOfOvernightStayWithoutInvoice
        - amountOfTotalOvernightsStayWithoutInvoice
        - inputQuantityOfOvernightStayWithInvoice
        - amountOfTotalOvernightsStayWithInvoice

    DietResponseDto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        dietAmount:
          type: number
          format: double
          example: 135.00
        numberOfBreakfasts:
          type: integer
          minimum: 0
          example: 1
        numberOfLunches:
          type: integer
          minimum: 0
          example: 1
        numberOfDinners:
          type: integer
          minimum: 0
          example: 1
      required:
        - id
        - dietAmount
        - numberOfBreakfasts
        - numberOfLunches
        - numberOfDinners

    OvernightStayResponseDto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        inputQuantityOfOvernightStayWithoutInvoice:
          type: integer
          minimum: 0
          example: 1
        amountOfTotalOvernightsStayWithoutInvoice:
          type: number
          format: double
          example: 50.00
        inputQuantityOfOvernightStayWithInvoice:
          type: integer
          minimum: 0
          example: 1
        amountOfTotalOvernightsStayWithInvoice:
          type: number
          format: double
          example: 100.00
        overnightStayAmount:
          type: number
          format: double
          example: 150.00
      required:
        - id
        - inputQuantityOfOvernightStayWithoutInvoice
        - amountOfTotalOvernightsStayWithoutInvoice
        - inputQuantityOfOvernightStayWithInvoice
        - amountOfTotalOvernightsStayWithInvoice
        - overnightStayAmount

    TravelResponseDto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        pesel:
          type: integer
          example: 12345678901
        fromCity:
          type: string
          example: Warsaw
        toCity:
          type: string
          example: Krakow
        startDate:
          type: string
          format: date
          example: 2023-01-01
        startTime:
          type: string
          format: time
          example: 08:00:00
        endDate:
          type: string
          format: date
          example: 2023-01-02
        endTime:
          type: string
          format: time
          example: 18:00:00
        totalAmount:
          type: number
          format: double
          example: 300.00
        advancePayment:
          type: number
          format: double
          example: 100.00
        dietResponse:
          $ref: '#/components/schemas/DietResponseDto'
        overnightStayResponseDto:
          $ref: '#/components/schemas/OvernightStayResponseDto'
      required:
        - id
        - pesel
        - fromCity
        - toCity
        - startDate
        - startTime
        - endDate
        - endTime
        - totalAmount
        - advancePayment
        - dietResponse
        - overnightStayResponseDto
